services:
  frontend:
    container_name: waketto-frontend
    build:
      context: ../frontend
      dockerfile: ../infra/frontend/Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ../frontend:/app
      - /app/node_modules
    environment: # ホットリロードのためのファイル監視（開発環境のみ）
      - CHOKIDAR_USEPOLLING=true
    command: pnpm dev --hostname 0.0.0.0
    user: "${UID}:${GID}"
    networks:
      - app-network

  backend:
    container_name: waketto-backend
    build:
      context: ../backend
      dockerfile: ../infra/backend/Dockerfile
    volumes:
      - ../backend:/var/www/html
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./backend/php.ini:/usr/local/etc/php/php.ini # php.iniをマウント
    environment:
      - DB_HOST=db
      - DB_DATABASE=${MYSQL_DATABASE}
      - DB_USERNAME=${MYSQL_USER}
      - DB_PASSWORD=${MYSQL_PASSWORD}
    user: "${UID}:${GID}"
    depends_on:
      - db
    networks:
      - app-network

  nginx:
    container_name: waketto-nginx
    image: nginx:stable-alpine # imageから直接ビルドしている
    ports:
      - "8000:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf # nginx設定をマウント
      - ../backend:/var/www/html
    depends_on:
      - backend
    networks:
      - app-network

  db:
    container_name: waketto-mysql
    image: mysql:8.4
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      TZ: ${TZ}
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  mysql_data:
